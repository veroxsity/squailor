name: Build and Release (Installers + Notes)

on:
  push:
    tags:
      - 'v*'
      - '*.*.*'

jobs:
  build:
    name: Build installers (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    env:
      # Use the correct secret for electron-builder publishing
      GH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        shell: pwsh
        run: |
          npm ci
          if ($LASTEXITCODE -ne 0) { npm install --no-audit --no-fund }

      # Build per-OS, passing the tag as the version to electron-builder wrapper
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          node ./scripts/build.js "${{ github.ref_name }}" --win --publish=never

      - name: Build macOS
        if: matrix.os == 'macos-latest'
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
        run: |
          node ./scripts/build.js "${{ github.ref_name }}" --mac --publish=never

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          node ./scripts/build.js "${{ github.ref_name }}" --linux --publish=never

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: |
            dist/**
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node (for release notes)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps for AI generator
        shell: pwsh
        run: |
          npm ci --omit=dev
          if ($LASTEXITCODE -ne 0) { npm i --omit=dev }

      - name: Generate release notes
        id: gen_notes
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          OPENAI_API_BASE: https://openrouter.ai/api/v1
          OPENROUTER_MODEL: openai/gpt-4o-mini
        run: |
          node ./scripts/generate-ai-release-notes.js "${{ github.ref_name }}"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Create GitHub Release (attach installers)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          files: |
            dist/*.exe
            dist/*.exe.blockmap
            dist/*-win*.zip
            dist/app-update.yml
            dist/*.dmg
            dist/*.dmg.blockmap
            dist/*-mac*.zip
            dist/latest-mac.yml
            dist/*.AppImage
            dist/*.AppImage.blockmap
            dist/*.deb
            dist/latest-linux.yml
            dist/latest.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


